
package proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ReleveWS", targetNamespace = "http://sid.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReleveWS {


    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.Releve
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consulter", targetNamespace = "http://sid.org/", className = "proxy.Consulter")
    @ResponseWrapper(localName = "consulterResponse", targetNamespace = "http://sid.org/", className = "proxy.ConsulterResponse")
    @Action(input = "http://sid.org/ReleveWS/consulterRequest", output = "http://sid.org/ReleveWS/consulterResponse")
    public Releve consulter(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

}
